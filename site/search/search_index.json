{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About This Site","text":"<p>This is the About page.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>Absolutely! Let\u2019s take your API Reference page to the next level so it looks like a real SaaS documentation portal, with proper sections, visuals, callouts, and highlighted code. Here\u2019s a fully polished version for SimpleChat:</p> <p>````markdown</p>"},{"location":"api-reference/#api-reference","title":"API Reference","text":"<p>Welcome to the SimpleChat API Reference. This page provides all available endpoints, request/response formats, error codes, and best practices for developers.</p>"},{"location":"api-reference/#authentication","title":"\ud83d\udd10 Authentication","text":"<p>All endpoints require an API key in the headers:</p> <pre><code>Authorization: Bearer &lt;YOUR_API_KEY&gt;\nContent-Type: application/json\n</code></pre> <p>!!! note \"Security Tip\"     Keep your API key safe. Never share it publicly or commit it to version control.     You can generate or revoke your API keys in the API Dashboard.</p> <p></p>"},{"location":"api-reference/#endpoints-overview","title":"\ud83d\udee0\ufe0f Endpoints Overview","text":"Endpoint Method Description <code>/messages</code> GET Retrieve all messages <code>/messages</code> POST Send a new message <code>/messages/{id}</code> PUT Update a message by ID <code>/messages/{id}</code> DELETE Delete a message by ID"},{"location":"api-reference/#1-list-messages","title":"1\ufe0f\u20e3 List Messages","text":"<p>Endpoint: <code>GET /messages</code> Description: Retrieve all messages for your account.</p> <p>!!! example \"Python Example\"     ```python     import requests</p> <pre><code>api_key = \"YOUR_API_KEY\"\nurl = \"https://api.simplechat.example.com/messages\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {api_key}\",\n    \"Content-Type\": \"application/json\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n```\n</code></pre> <p>Sample Response:</p> <pre><code>[\n    {\n        \"id\": 1,\n        \"from\": \"alice\",\n        \"to\": \"bob\",\n        \"message\": \"Hello Bob!\",\n        \"timestamp\": \"2025-08-19T10:00:00Z\"\n    }\n]\n</code></pre>"},{"location":"api-reference/#2-send-a-message","title":"2\ufe0f\u20e3 Send a Message","text":"<p>Endpoint: <code>POST /messages</code> Description: Send a new message to a user.</p> <p>Request Body:</p> <pre><code>{\n    \"to\": \"bob\",\n    \"message\": \"Hello from SimpleChat API!\"\n}\n</code></pre> <p>!!! example \"Python Example\"     ```python     payload = {         \"to\": \"bob\",         \"message\": \"Hello from SimpleChat API!\"     }</p> <pre><code>response = requests.post(\"https://api.simplechat.example.com/messages\", headers=headers, json=payload)\nprint(response.json())\n```\n</code></pre> <p>Sample Response:</p> <pre><code>{\n    \"id\": 2,\n    \"from\": \"alice\",\n    \"to\": \"bob\",\n    \"message\": \"Hello from SimpleChat API!\",\n    \"timestamp\": \"2025-08-19T10:05:00Z\"\n}\n</code></pre>"},{"location":"api-reference/#3-update-a-message","title":"3\ufe0f\u20e3 Update a Message","text":"<p>Endpoint: <code>PUT /messages/{id}</code> Description: Update the content of an existing message by ID.</p> <p>Request Body:</p> <pre><code>{\n    \"message\": \"Updated message content\"\n}\n</code></pre> <p>!!! example \"Python Example\"     ```python     message_id = 2     payload = {\"message\": \"Updated message content\"}</p> <pre><code>response = requests.put(f\"https://api.simplechat.example.com/messages/{message_id}\", headers=headers, json=payload)\nprint(response.json())\n```\n</code></pre> <p>Sample Response:</p> <pre><code>{\n    \"id\": 2,\n    \"from\": \"alice\",\n    \"to\": \"bob\",\n    \"message\": \"Updated message content\",\n    \"timestamp\": \"2025-08-19T10:05:00Z\"\n}\n</code></pre>"},{"location":"api-reference/#4-delete-a-message","title":"4\ufe0f\u20e3 Delete a Message","text":"<p>Endpoint: <code>DELETE /messages/{id}</code> Description: Delete a message by ID.</p> <p>!!! example \"Python Example\"     <code>python     message_id = 2     response = requests.delete(f\"https://api.simplechat.example.com/messages/{message_id}\", headers=headers)     print(response.status_code)  # 204 = Success</code></p>"},{"location":"api-reference/#api-error-codes","title":"\u26a0\ufe0f API Error Codes","text":"Status Code Meaning Notes 200 Success Request succeeded 201 Created Resource successfully created 204 No Content (deleted) Resource deleted successfully 400 Bad Request Check your request syntax 401 Unauthorized / Invalid API Key API key missing or invalid 404 Not Found Resource not found 500 Internal Server Error Server-side error <p>!!! warning \"Pro Tip\"     Always check the response status code before processing data. Implement error handling to make your application more robust.</p>"},{"location":"api-reference/#summary","title":"\u2705 Summary","text":"<ul> <li>Use <code>Authorization: Bearer &lt;API_KEY&gt;</code> for all endpoints  </li> <li>Available endpoints:  </li> <li><code>GET /messages</code> </li> <li><code>POST /messages</code> </li> <li><code>PUT /messages/{id}</code> </li> <li><code>DELETE /messages/{id}</code> </li> <li>Check error codes to debug issues and handle exceptions properly  </li> </ul>"},{"location":"api-reference/#visual-aids","title":"\ud83d\udcf8 Visual Aids","text":"<p>You can include screenshots or diagrams to make your docs visually appealing:</p> <ul> <li>API Dashboard  </li> <li>Sample JSON responses  </li> <li>Flow diagram for sending/updating messages  </li> </ul> <p></p> <p>This version uses: - Emojis for visual cues - Callouts (<code>!!! example</code>, <code>!!! note</code>, <code>!!! warning</code>) - Tables for endpoints and error codes - Screenshots to simulate a real SaaS documentation - Syntax-highlighted code blocks for Python, JSON, HTTP  </p>"},{"location":"changelog/","title":"Changelog \u2013 SimpleChat API","text":"<p>Keep track of all changes, updates, and improvements to the SimpleChat API.</p>"},{"location":"changelog/#version-120-2025-08-15","title":"\ud83d\udcc5 Version 1.2.0 \u2013 2025-08-15","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>New endpoint: <code>GET /messages/{id}</code> to fetch a single message by ID  </li> <li>Support for rich text formatting in messages  </li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Bug where <code>PUT /messages/{id}</code> sometimes ignored updates  </li> <li>Error handling for invalid API keys  </li> </ul>"},{"location":"changelog/#improved","title":"Improved","text":"<ul> <li>Enhanced response times for <code>GET /messages</code> </li> <li>Updated Python examples for better readability</li> </ul>"},{"location":"changelog/#version-110-2025-07-20","title":"\ud83d\udcc5 Version 1.1.0 \u2013 2025-07-20","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li><code>DELETE /messages/{id}</code> endpoint to remove messages  </li> <li>Rate limit info added to API responses  </li> <li>Example workflows for creating and updating messages  </li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>JSON formatting issue in <code>POST /messages</code> response  </li> <li>Minor typo in authentication header documentation</li> </ul>"},{"location":"changelog/#version-100-2025-06-01","title":"\ud83d\udcc5 Version 1.0.0 \u2013 2025-06-01","text":""},{"location":"changelog/#initial-release","title":"Initial Release","text":"<ul> <li>Core endpoints: <code>GET /messages</code>, <code>POST /messages</code>, <code>PUT /messages/{id}</code> </li> <li>Authentication via API key  </li> <li>Basic error codes and sample responses  </li> <li>Getting Started and API Reference documentation pages</li> </ul>"},{"location":"changelog/#summary","title":"\u2705 Summary","text":"<ul> <li>Version 1.0.0 \u2013 Initial launch  </li> <li>Version 1.1.0 \u2013 Added delete endpoint, improved examples  </li> <li>Version 1.2.0 \u2013 Added single message fetch, rich text support, bug fixes  </li> </ul> <p>!!! tip \"Pro Tip\"     Always check the latest version before using the API to ensure you have access to all new features and fixes.</p>"},{"location":"examples/","title":"Examples &amp; Tutorials","text":"<p>This page provides step-by-step examples of how to use the SimpleChat API for common tasks.</p>"},{"location":"examples/#1-create-your-first-message","title":"1\ufe0f\u20e3 Create Your First Message","text":"<p>Goal: Send a message from one user to another.</p> <p>!!! note \"Before You Start\"     Make sure you have your API key and have set up your account in the API Dashboard.</p> <p>Step 1: Prepare the Request</p> <pre><code>import requests\n\napi_key = \"YOUR_API_KEY\"\nurl = \"https://api.simplechat.example.com/messages\"\n\npayload = {\n    \"to\": \"bob\",\n    \"message\": \"Hello Bob! This is my first message.\"\n}\n\nheaders = {\n    \"Authorization\": f\"Bearer {api_key}\",\n    \"Content-Type\": \"application/json\"\n}\n</code></pre> <p>Step 2: Send the Request</p> <pre><code>response = requests.post(url, headers=headers, json=payload)\nprint(response.json())\n</code></pre> <p>Sample Response:</p> <pre><code>{\n    \"id\": 1,\n    \"from\": \"alice\",\n    \"to\": \"bob\",\n    \"message\": \"Hello Bob! This is my first message.\",\n    \"timestamp\": \"2025-08-19T10:00:00Z\"\n}\n</code></pre>"},{"location":"examples/#2-list-all-messages","title":"2\ufe0f\u20e3 List All Messages","text":"<p>Goal: Fetch all messages in your account.</p> <pre><code>response = requests.get(\"https://api.simplechat.example.com/messages\", headers=headers)\nmessages = response.json()\nfor msg in messages:\n    print(f\"{msg['from']} \u2192 {msg['to']}: {msg['message']}\")\n</code></pre> <p>Sample Output:</p> <pre><code>alice \u2192 bob: Hello Bob! This is my first message.\nbob \u2192 alice: Hey Alice! Got your message.\n</code></pre>"},{"location":"examples/#3-update-a-message","title":"3\ufe0f\u20e3 Update a Message","text":"<p>Goal: Modify the content of an existing message.</p> <pre><code>message_id = 1\npayload = {\"message\": \"Hello Bob! Edited message content.\"}\n\nresponse = requests.put(f\"https://api.simplechat.example.com/messages/{message_id}\", headers=headers, json=payload)\nprint(response.json())\n</code></pre> <p>Sample Response:</p> <pre><code>{\n    \"id\": 1,\n    \"from\": \"alice\",\n    \"to\": \"bob\",\n    \"message\": \"Hello Bob! Edited message content.\",\n    \"timestamp\": \"2025-08-19T10:05:00Z\"\n}\n</code></pre>"},{"location":"examples/#4-delete-a-message","title":"4\ufe0f\u20e3 Delete a Message","text":"<p>Goal: Remove a message by its ID.</p> <pre><code>message_id = 1\nresponse = requests.delete(f\"https://api.simplechat.example.com/messages/{message_id}\", headers=headers)\nprint(response.status_code)  # 204 = Success\n</code></pre> <p>!!! tip \"Good Practice\"     Always confirm deletion by fetching the list of messages again. Handle <code>404 Not Found</code> if the message ID does not exist.</p>"},{"location":"examples/#5-real-world-workflow","title":"5\ufe0f\u20e3 Real-World Workflow","text":"<p>Scenario: Alice sends a message \u2192 Bob receives \u2192 Bob replies \u2192 Alice updates her original message \u2192 Alice deletes an old message.</p> <ol> <li>Send a message (<code>POST /messages</code>)  </li> <li>List messages (<code>GET /messages</code>)  </li> <li>Update a message (<code>PUT /messages/{id}</code>)  </li> <li>Delete a message (<code>DELETE /messages/{id}</code>)  </li> </ol> <p></p>"},{"location":"examples/#summary","title":"\u2705 Summary","text":"<ul> <li>Step-by-step examples show how to send, list, update, and delete messages.  </li> <li>Use callouts and tips to make your workflow robust.  </li> <li>Include visual aids for clarity.  </li> </ul>"},{"location":"faq/","title":"FAQ \u2013 SimpleChat API","text":"<p>This page answers the most common questions about using the SimpleChat API.</p>"},{"location":"faq/#authentication-api-key","title":"\ud83d\udd11 Authentication &amp; API Key","text":""},{"location":"faq/#how-do-i-get-an-api-key","title":"How do I get an API key?","text":"<ol> <li>Sign up or log in to your SimpleChat account.  </li> <li>Go to your API Dashboard.  </li> <li>Click Generate API Key.  </li> <li>Copy and securely store your API key.</li> </ol> <p>!!! note \"Security Tip\"     Never share your API key publicly or commit it to version control. Treat it like a password.</p>"},{"location":"faq/#what-if-my-api-key-is-lost-or-compromised","title":"What if my API key is lost or compromised?","text":"<ul> <li>Go to your API Dashboard.  </li> <li>Revoke the old key and generate a new one.  </li> <li>Update your applications with the new key immediately.</li> </ul>"},{"location":"faq/#rate-limits","title":"\u26a1 Rate Limits","text":""},{"location":"faq/#how-many-api-requests-can-i-make","title":"How many API requests can I make?","text":"<ul> <li>Free Tier: 100 requests per hour  </li> <li>Pro Tier: 1000 requests per hour  </li> </ul> <p>!!! warning \"Rate Limit Exceeded\"     If you exceed the limit, your API will return HTTP 429 Too Many Requests.     Implement retry logic or upgrade your plan.</p>"},{"location":"faq/#common-errors","title":"\ud83d\udee0\ufe0f Common Errors","text":""},{"location":"faq/#401-unauthorized","title":"401 Unauthorized","text":"<ul> <li>Cause: Missing or invalid API key.  </li> <li>Solution: Verify your key and ensure it is included in the header:</li> </ul> <pre><code>Authorization: Bearer &lt;YOUR_API_KEY&gt;\n</code></pre>"},{"location":"faq/#404-not-found","title":"404 Not Found","text":"<ul> <li>Cause: Endpoint or message ID does not exist.  </li> <li>Solution: Double-check the URL and parameters.</li> </ul>"},{"location":"faq/#500-internal-server-error","title":"500 Internal Server Error","text":"<ul> <li>Cause: Server-side issue.  </li> <li>Solution: Retry after a few seconds. Contact support if it persists.</li> </ul>"},{"location":"faq/#tips-best-practices","title":"\ud83d\udca1 Tips &amp; Best Practices","text":"<ul> <li>Always check the status code before processing data.  </li> <li>Use GET /messages to confirm updates or deletions.  </li> <li>Keep your API keys secure and rotate them periodically.  </li> <li>Implement error handling for 401, 404, and 429 codes.</li> </ul>"},{"location":"faq/#summary","title":"\u2705 Summary","text":"<ul> <li>FAQs cover authentication, rate limits, and errors.  </li> <li>Use callouts to highlight important tips and warnings.  </li> <li>Following these guidelines ensures smooth integration with SimpleChat API.</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Absolutely! Here\u2019s a fully cleaned up, professional \u201cGetting Started\u201d page for your SimpleChat API documentation. You can copy-paste this directly into <code>getting-started.md</code> in your MkDocs project. It uses proper headings, code blocks, notes, and formatting like a real tech doc.</p> <pre><code># Getting Started with SimpleChat API\n\nWelcome to **SimpleChat**, your lightweight messaging platform for developers. This guide will help you get set up quickly and start sending your first messages via our API.\n\n---\n\n## Create Your Account\n\n1. Visit the [SimpleChat signup page](https://simplechat.example.com/signup).  \n2. Enter your **email**, **username**, and **password**.  \n3. Verify your email address by clicking the link we send you.  \n4. Log in to access your **API Dashboard**.\n\n!!! note \"Tip\"\n    Keep your login credentials secure. Never share your password.\n\n---\n\n## Generate Your API Key\n\nEvery API request requires an **API key** for authentication.\n\n1. In the **API Dashboard**, click **Generate API Key**.  \n2. Copy the key \u2014 you will need it for all your API requests.  \n3. Store it safely. This key grants full access to your SimpleChat account.\n\n---\n\n## Install an HTTP Client (Optional)\n\nYou can interact with the SimpleChat API using any HTTP client:\n\n- **Command Line:** `curl`  \n- **GUI Client:** Postman  \n- **Programming Languages:** Python, JavaScript, Java, etc.\n\n**Python example:**\n```bash\npip install requests\n</code></pre>"},{"location":"getting-started/#make-your-first-api-call","title":"Make Your First API Call","text":"<p>Let\u2019s fetch your list of messages:</p> <p>Endpoint: <code>GET /messages</code> Full URL: <code>https://api.simplechat.example.com/messages</code> Headers:</p> <pre><code>Authorization: Bearer &lt;YOUR_API_KEY&gt;\nContent-Type: application/json\n</code></pre> <p>Python Example:</p> <pre><code>import requests\n\napi_key = \"YOUR_API_KEY\"\nurl = \"https://api.simplechat.example.com/messages\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {api_key}\",\n    \"Content-Type\": \"application/json\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n</code></pre> <p>Sample Response:</p> <pre><code>[\n    {\n        \"id\": 1,\n        \"from\": \"alice\",\n        \"to\": \"bob\",\n        \"message\": \"Hello Bob!\",\n        \"timestamp\": \"2025-08-19T10:00:00Z\"\n    }\n]\n</code></pre>"},{"location":"getting-started/#send-your-first-message","title":"Send Your First Message","text":"<p>Endpoint: <code>POST /messages</code></p> <p>Request Body:</p> <pre><code>{\n    \"to\": \"bob\",\n    \"message\": \"Hello from SimpleChat API!\"\n}\n</code></pre> <p>Python Example:</p> <pre><code>payload = {\n    \"to\": \"bob\",\n    \"message\": \"Hello from SimpleChat API!\"\n}\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(response.json())\n</code></pre> <p>Sample Response:</p> <pre><code>{\n    \"id\": 2,\n    \"from\": \"alice\",\n    \"to\": \"bob\",\n    \"message\": \"Hello from SimpleChat API!\",\n    \"timestamp\": \"2025-08-19T10:05:00Z\"\n}\n</code></pre>"},{"location":"getting-started/#update-or-delete-a-message","title":"Update or Delete a Message","text":"<p>Update a Message Endpoint: <code>PUT /messages/{id}</code></p> <p>Request Body:</p> <pre><code>{\n    \"message\": \"Updated message content\"\n}\n</code></pre> <p>Delete a Message Endpoint: <code>DELETE /messages/{id}</code></p> <p>Python Example:</p> <pre><code>message_id = 2\nresponse = requests.delete(f\"https://api.simplechat.example.com/messages/{message_id}\", headers=headers)\nprint(response.status_code)  # 204 = Success\n</code></pre>"},{"location":"getting-started/#summary","title":"\u2705 Summary","text":"<ul> <li>Sign up and log in</li> <li>Generate your API key</li> <li>Fetch messages using <code>GET /messages</code></li> <li>Send messages using <code>POST /messages</code></li> <li>Update or delete messages as needed</li> </ul> <pre><code>\n---\n\nThis version:  \n- Uses **`#` and `##` headings** for sections  \n- Uses **triple backticks** for Python, JSON, HTTP code blocks  \n- Adds **notes** for tips  \n- Adds **horizontal rules (`---`)** for section separation  \n- Is clean and ready to look **professional with Material theme**  \n\n---\n\nIf you want, I can also **make the API Reference page** next with **all endpoints fully documented in tables and code blocks**, so your MkDocs site looks like a **real developer API documentation**.  \n\nDo you want me to do that next?\n</code></pre>"}]}